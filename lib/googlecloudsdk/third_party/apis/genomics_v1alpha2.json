{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "genomics:v1alpha2",
  "name": "genomics",
  "version": "v1alpha2",
  "revision": "0",
  "title": "Genomics API",
  "description": "An API to store, process, explore, and share genomic data. It supports reference-based alignments, genetic variants, and reference genomes. This API provides an implementation of the Global Alliance for Genomics and Health (GA4GH) v0.5.1 API as well as several extensions.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "",
  "protocol": "rest",
  "rootUrl": "https://genomics.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://genomics.googleapis.com/",
  "batchPath": "batch",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "bearer_token": {
      "type": "string",
      "description": "OAuth bearer token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "pp": {
      "type": "boolean",
      "description": "Pretty-print response.",
      "default": "true",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/genomics": {
          "description": "View and manage Genomics data"
        }
      }
    }
  },
  "schemas": {
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. For example&#58; `operations\/CJHU7Oi_ChDrveSpBRjfuL-qzoWAgEw`",
          "type": "string"
        },
        "metadata": {
          "description": "An OperationMetadata object. This will always be returned with the Operation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @ype with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf true, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure.",
          "$ref": "Status"
        },
        "response": {
          "description": "If importing ReadGroupSets, an ImportReadGroupSetsResponse is returned. If importing Variants, an ImportVariantsResponse is returned. For exports, an empty response is returned.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @ype with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https:\/\/github.com\/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security\/privacy reasons.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @ype with type URL."
            }
          }
        }
      }
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "Pipeline": {
      "id": "Pipeline",
      "description": "The pipeline object. Represents a transformation from a set of input\nparameters to a set of output parameters. The transformation is defined\nas a docker image and command to run within that image. Each pipeline\nis run on a GCE VM. A pipeline can be created with the `create` method\nand then later run with the `run` method, or a pipeline can be\ndefined and run all at once with the `run` method.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Required. The project in which to create the pipeline. The caller must have\nWRITE access.",
          "type": "string"
        },
        "name": {
          "description": "Required. A user specified pipeline name that does not have to be unique.\nThis name can be used for filtering Pipelines in ListPipelines.",
          "type": "string"
        },
        "description": {
          "description": "Optional. User-specified description.",
          "type": "string"
        },
        "inputParameters": {
          "description": "Input parameters of the pipeline.",
          "type": "array",
          "items": {
            "$ref": "PipelineParameter"
          }
        },
        "outputParameters": {
          "description": "Output parameters of the pipeline.",
          "type": "array",
          "items": {
            "$ref": "PipelineParameter"
          }
        },
        "docker": {
          "description": "Specifies the docker run information.",
          "$ref": "DockerExecutor"
        },
        "resources": {
          "description": "Required. Specifies resource requirements for the pipeline run.\nRequired fields:\n\n*\nminimumCpuCores\n\n*\nminimumRamGb",
          "$ref": "PipelineResources"
        },
        "pipelineId": {
          "description": "Unique pipeline id that is generated by the service when CreatePipeline\nis called. Cannot be specified in the Pipeline used in the\nCreatePipelineRequest, and will be populated in the response to\nCreatePipeline and all subsequent Get and List calls. Indicates that the\nservice has registered this pipeline.",
          "type": "string"
        }
      }
    },
    "PipelineParameter": {
      "id": "PipelineParameter",
      "description": "Parameters facilitate setting and delivering data into the\npipeline's execution environment. They are defined at create time,\nwith optional defaults, and can be overridden at run time.\n\nIf `localCopy` is unset, then the parameter specifies a string that\nis passed as-is into the pipeline, as the value of the environment\nvariable with the given name.  A default value can be optionally\nspecified at create time. The default can be overridden at run time\nusing the inputs map. If no default is given, a value must be\nsupplied at runtime.\n\nIf `localCopy` is defined, then the parameter specifies a data\nsource or sink, both in GCS and on the Docker container where the\npipeline computation is run. At run time, the GCS paths can be\noverridden if a default was provided at create time, or must be set\notherwise. The pipeline runner should add a key\/value pair to\neither the inputs or outputs map. The indicated data copies will be\ncarried out before\/after pipeline execution, just as if the\ncorresponding arguments were provided to `gsutil cp`.\n\nFor example: Given the following `PipelineParameter`, specified\nin the `inputParameters` list:\n\n```\n{name: \"input_file\", localCopy: {path: \"file.txt\", disk: \"pd1\"}}\n```\n\nwhere `disk` is defined in the `PipelineResources` object as:\n\n```\n{name: \"pd1\", mountPoint: \"\/mnt\/disk\/\"}\n```\n\nWe create a disk named `pd1`, mount it on the host VM, and map\n`\/mnt\/pd1` to `\/mnt\/disk` in the docker container.  At\nruntime, an entry for `input_file` would be required in the inputs\nmap, such as:\n\n```\n  inputs[\"input_file\"] = \"gs:\/\/my-bucket\/bar.txt\"\n```\n\nThis would generate the following gsutil call:\n\n```\n  gsutil cp gs:\/\/my-bucket\/bar.txt \/mnt\/pd1\/file.txt\n```\n\nThe file `\/mnt\/pd1\/file.txt` maps to `\/mnt\/disk\/file.txt` in the\nDocker container.  Note that we do not use `cp -r`, so for\ninputs, the GCS path (runtime value) must be a file or a glob,\nwhile the local path must be a file or a directory, respectively.\nFor outputs, the direction of the copy is reversed:\n\n```\n  gsutil cp \/mnt\/disk\/file.txt gs:\/\/my-bucket\/bar.txt\n```\n\nAgain note that there is no `-r`, so the GCS path (runtime\nvalue) must be a file or a directory, while the local path can be a\nfile or a glob, respectively. One restriction, due to docker\nlimitations, is that for outputs that are found on the boot disk,\nthe local path cannot be a glob and must be a file.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the parameter - the pipeline runner uses this string\nas the key to the input and output maps in RunPipeline.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Human-readable description.",
          "type": "string"
        },
        "defaultValue": {
          "description": "The default value for this parameter. Can be overridden at runtime.\nIf `localCopy` is present, then this must be a GCS path beginning with\n`gs:\/\/`.",
          "type": "string"
        },
        "localCopy": {
          "description": "If present, this parameter is marked for copying to and from the VM.\n`LocalCopy` indicates where on the VM the file should be. The value\ngiven to this parameter (either at runtime or using `defaultValue`)\nmust be the remote path where the file should be.",
          "$ref": "LocalCopy"
        }
      }
    },
    "LocalCopy": {
      "id": "LocalCopy",
      "description": "LocalCopy defines how a remote file should be copied to and from the VM.",
      "type": "object",
      "properties": {
        "path": {
          "description": "Required. The path within the user's docker container where\nthis input should be localized to and from, relative to the specified\ndisk's mount point. For example: file.txt,",
          "type": "string"
        },
        "disk": {
          "description": "Required. The name of the disk where this parameter is\nlocated. Can be the name of one of the disks specified in the\nResources field, or \"boot\", which represents the Docker\ninstance's boot disk and has a mount point of `\/`.",
          "type": "string"
        }
      }
    },
    "DockerExecutor": {
      "id": "DockerExecutor",
      "description": "The Docker execuctor specification.",
      "type": "object",
      "properties": {
        "imageName": {
          "description": "Required. Image name from either Docker Hub or Google Container Repository.\nUsers that run pipelines must have READ access to the image.",
          "type": "string"
        },
        "cmd": {
          "description": "Required. The command string to run. Parameters that do not have\n`localCopy` specified should be used as environment variables, while\nthose that do can be accessed at the defined paths.",
          "type": "string"
        }
      }
    },
    "PipelineResources": {
      "id": "PipelineResources",
      "description": "The system resources for the pipeline run.",
      "type": "object",
      "properties": {
        "minimumCpuCores": {
          "description": "Required at create time; optional at run time. The minimum number of\ncores to use.",
          "type": "integer",
          "format": "int32"
        },
        "preemptible": {
          "description": "Optional. At create time means that preemptible machines may be\nused for the run. At run time, means they should be used. Cannot\nbe true at run time if false at create time.",
          "type": "boolean"
        },
        "minimumRamGb": {
          "description": "Required at create time; optional at run time. The minimum amount of RAM\nto use.",
          "type": "number",
          "format": "double"
        },
        "disks": {
          "description": "Disks to attach.",
          "type": "array",
          "items": {
            "$ref": "Disk"
          }
        },
        "zones": {
          "description": "List of Google Compute Engine availability zones to which resource\ncreation will restricted. If empty, any zone may be chosen.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Disk": {
      "id": "Disk",
      "description": "A Google Compute Engine disk resource specification.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the disk that can be used in the pipeline\nparameters. Must be 1 - 63 characters.\nThe name \"boot\" is reserved for system use.",
          "type": "string"
        },
        "type": {
          "description": "The type of the disk to create, if applicable.",
          "enumDescriptions": [
            "Default disk type. Use one of the other options below.",
            "Specifies a Google Compute Engine persistent hard disk. See\nhttps:\/\/cloud.google.com\/compute\/docs\/disks\/persistent-disks#typeofdisks\nfor details.",
            "Specifies a Google Compute Engine persistent solid-state disk. See\nhttps:\/\/cloud.google.com\/compute\/docs\/disks\/persistent-disks#typeofdisks\nfor details.",
            "Specifies a Google Compute Engine local SSD.\nSee https:\/\/cloud.google.com\/compute\/docs\/disks\/local-ssd for details."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PERSISTENT_HDD",
            "PERSISTENT_SSD",
            "LOCAL_SSD"
          ]
        },
        "sizeGb": {
          "description": "The size of the disk. This field is not applicable for local SSD.",
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "description": "The full or partial URL of the persistent disk to attach. See\nhttps:\/\/cloud.google.com\/compute\/docs\/reference\/latest\/instances#resource\nand\nhttps:\/\/cloud.google.com\/compute\/docs\/disks\/persistent-disks#snapshots\nfor more details.",
          "type": "string"
        },
        "autoDelete": {
          "description": "Specifies whether or not to delete the disk when the pipeline\ncompletes. This field is applicable only for newly created disks. See\nhttps:\/\/cloud.google.com\/compute\/docs\/reference\/latest\/instances#resource\nfor more details.\nOptional. At create time means that an auto delete disk may be\nused. At run time, means it should be used. Cannot\nbe true at run time if false at create time.",
          "type": "boolean"
        },
        "readOnly": {
          "description": "Specifies how a sourced-base persistent disk will be mounted. See\nhttps:\/\/cloud.google.com\/compute\/docs\/disks\/persistent-disks#use_multi_instances\nfor more details.\nCan only be set at create time.",
          "type": "boolean"
        },
        "mountPoint": {
          "description": "Required at create time and cannot be overridden at run time.\nSpecifies the path in the docker container where files on\nthis disk should be located. For example, if `mountPoint`\nis `\/mnt\/disk`, and the parameter has `localPath`\n`inputs\/file.txt`, the docker container can access the data at\n`\/mnt\/disk\/inputs\/file.txt`.",
          "type": "string"
        }
      }
    },
    "RunPipelineRequest": {
      "id": "RunPipelineRequest",
      "description": "The request to run a pipeline. If `pipelineId` is specified, it\nrefers to a saved pipeline created with CreatePipeline and set as\nthe `pipelineId` of the returned Pipeline object. If\n`ephemeralPipeline` is specified, that pipeline is run once\nwith the given args and not saved. It is an error to specify both\n`pipelineId` and `ephemeralPipeline`. `pipelineArgs`\nmust be specified.",
      "type": "object",
      "properties": {
        "pipelineId": {
          "description": "The already created pipeline to run.",
          "type": "string"
        },
        "ephemeralPipeline": {
          "description": "A new pipeline object to run once and then delete.",
          "$ref": "Pipeline"
        },
        "pipelineArgs": {
          "description": "The arguments to use when running this pipeline.",
          "$ref": "RunPipelineArgs"
        }
      }
    },
    "RunPipelineArgs": {
      "id": "RunPipelineArgs",
      "description": "The pipeline run arguments.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Required. The project in which to run the pipeline. The caller must have\nWRITER access to all Google Cloud services and resources (e.g. Google\nCompute Engine) will be used.",
          "type": "string"
        },
        "inputs": {
          "description": "Pipeline input arguments; keys are defined in the pipeline documentation.\nAll input parameters that do not have default values  must be specified.\nIf parameters with defaults are specified here, the defaults will be\noverridden.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "outputs": {
          "description": "Pipeline output arguments; keys are defined in the pipeline\ndocumentation.  All output parameters of without default values\nmust be specified.  If parameters with defaults are specified\nhere, the defaults will be overridden.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "serviceAccount": {
          "description": "Required. The Google Cloud Service Account that will be used to access\ndata and services.",
          "$ref": "ServiceAccount"
        },
        "clientId": {
          "description": "Optional. For callers to use in filtering operations returned by this\nrequest.",
          "type": "string"
        },
        "resources": {
          "description": "Specifies resource requirements\/overrides for the pipeline run.",
          "$ref": "PipelineResources"
        },
        "logging": {
          "description": "Required. Logging options. Used by the service to communicate results\nto the user.",
          "$ref": "LoggingOptions"
        }
      }
    },
    "ServiceAccount": {
      "id": "ServiceAccount",
      "description": "A Google Cloud Service Account.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Required. Email address of the service account. 'default' is a valid\noption and uses the compute service account associated with the project.",
          "type": "string"
        },
        "scopes": {
          "description": "Required. List of scopes to be made available for this service\naccount. Should include\n* https:\/\/www.googleapis.com\/auth\/genomics\n* https:\/\/www.googleapis.com\/auth\/compute\n* https:\/\/www.googleapis.com\/auth\/devstorage.full_control",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LoggingOptions": {
      "id": "LoggingOptions",
      "description": "The logging options for the pipeline run.",
      "type": "object",
      "properties": {
        "gcsPath": {
          "description": "The location in Google Cloud Storage to which the pipeline logs\nwill be copied. Can be specified as a fully qualified directory\npath, in which case logs will be output with a unique identifier\nas the filename in that directory, or as a fully specified path,\nwhich must end in `.log`, in which case that path will be\nused, and the user must ensure that logs are not\noverwritten. Stdout and stderr logs from the run are also\ngenerated and output as `-stdout.log` and `-stderr.log`.",
          "type": "string"
        }
      }
    },
    "ListPipelinesResponse": {
      "id": "ListPipelinesResponse",
      "description": "The response of ListPipelines. Contains at most `pageSize`\npipelines. If it contains `pageSize` pipelines, and more pipelines\nexist, then `nextPageToken` will be populated and should be\nused as the `pageToken` argument to a subsequent ListPipelines\nrequest.",
      "type": "object",
      "properties": {
        "pipelines": {
          "description": "The matched pipelines.",
          "type": "array",
          "items": {
            "$ref": "Pipeline"
          }
        },
        "nextPageToken": {
          "description": "The token to use to get the next page of results.",
          "type": "string"
        }
      }
    },
    "ImportReadGroupSetsResponse": {
      "id": "ImportReadGroupSetsResponse",
      "description": "The read group set import response.",
      "type": "object",
      "properties": {
        "readGroupSetIds": {
          "description": "IDs of the read group sets that were created.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ImportVariantsResponse": {
      "id": "ImportVariantsResponse",
      "description": "The variant data import response.",
      "type": "object",
      "properties": {
        "callSetIds": {
          "description": "IDs of the call sets created during the import.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Metadata describing an Operation.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "The Google Cloud Project in which the job is scoped.",
          "type": "string"
        },
        "createTime": {
          "description": "The time at which the job was submitted to the Genomics service.",
          "type": "string",
          "format": "google-datetime"
        },
        "request": {
          "description": "The original request that started the operation. Note that this will be in\ncurrent version of the API. If the operation was started with v1beta2 API\nand a GetOperation is performed on v1 API, a v1 request will be returned.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @ype with type URL."
          }
        },
        "events": {
          "description": "Optional event messages that were generated during the job's execution.\nThis also contains any warnings that were generated during import\nor export.",
          "type": "array",
          "items": {
            "$ref": "OperationEvent"
          }
        }
      }
    },
    "OperationEvent": {
      "id": "OperationEvent",
      "description": "An event that occurred during an Operation.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Required description of event.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "operations": {
      "methods": {
        "get": {
          "id": "genomics.operations.get",
          "path": "v1alpha2/{+name}",
          "flatPath": "v1alpha2/operations/{operationsId}",
          "httpMethod": "GET",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.*$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/genomics"
          ]
        },
        "list": {
          "id": "genomics.operations.list",
          "path": "v1alpha2/{+name}",
          "flatPath": "v1alpha2/operations",
          "httpMethod": "GET",
          "description": "Lists operations that match the specified filter in the request.",
          "parameters": {
            "name": {
              "description": "The name of the operation collection.",
              "location": "path",
              "required": true,
              "pattern": "^operations$",
              "type": "string"
            },
            "filter": {
              "description": "A string for filtering Operations.\nThe following filter fields are supported&#58;\n\n* projectId&#58; Required. Corresponds to\n  OperationMetadata.projectId.\n* createTime&#58; The time this job was created, in seconds from the\n  [epoch](http:\/\/en.wikipedia.org\/wiki\/Unix_time). Can use `>=` and\/or `<=`\n  operators.\n* status&#58; Can be `RUNNING`, `SUCCESS`, `FAILURE`, or `CANCELED`. Only\n  one status may be specified.\n\nExamples&#58;\n\n* `projectId = my-project AND createTime >= 1432140000`\n* `projectId = my-project AND createTime >= 1432140000 AND createTime <= 1432150000 AND status = RUNNING`",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "The maximum number of results to return. If unspecified, defaults to\n256. The maximum value is 2048.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The standard list page token.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/genomics"
          ]
        },
        "cancel": {
          "id": "genomics.operations.cancel",
          "path": "v1alpha2/{+name}:cancel",
          "flatPath": "v1alpha2/operations/{operationsId}:cancel",
          "httpMethod": "POST",
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. Clients may use Operations.GetOperation or Operations.ListOperations to check whether the cancellation succeeded or the operation completed despite cancellation.",
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be cancelled.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.*$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/genomics"
          ]
        }
      }
    },
    "pipelines": {
      "methods": {
        "create": {
          "id": "genomics.pipelines.create",
          "path": "v1alpha2/pipelines",
          "flatPath": "v1alpha2/pipelines",
          "httpMethod": "POST",
          "description": "Creates a pipeline that can be run later. Create takes a Pipeline that\nhas all fields other than `pipelineId` populated, and then returns\nthe same pipeline with `pipelineId` populated. This id can be used\nto run the pipeline.\n\nCaller must have WRITE permission to the project.",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "Pipeline"
          },
          "response": {
            "$ref": "Pipeline"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/genomics"
          ]
        },
        "run": {
          "id": "genomics.pipelines.run",
          "path": "v1alpha2/pipelines:run",
          "flatPath": "v1alpha2/pipelines:run",
          "httpMethod": "POST",
          "description": "Runs a pipeline. If `pipelineId` is specified in the request, then\nrun a saved pipeline. If `ephemeralPipeline` is specified, then run\nthat pipeline once without saving a copy.\n\nThe caller must have READ permission to the project where the pipeline\nis stored and WRITE permission to the project where the pipeline will be\nrun, as VMs will be created and storage will be used.",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "RunPipelineRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/genomics"
          ]
        },
        "get": {
          "id": "genomics.pipelines.get",
          "path": "v1alpha2/pipelines/{pipelineId}",
          "flatPath": "v1alpha2/pipelines/{pipelineId}",
          "httpMethod": "GET",
          "description": "Retrieves a pipeline based on ID.\n\nCaller must have READ permission to the project.",
          "parameters": {
            "pipelineId": {
              "description": "Caller must have READ access to the project in which this pipeline\nis defined.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "pipelineId"
          ],
          "response": {
            "$ref": "Pipeline"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/genomics"
          ]
        },
        "list": {
          "id": "genomics.pipelines.list",
          "path": "v1alpha2/pipelines",
          "flatPath": "v1alpha2/pipelines",
          "httpMethod": "GET",
          "description": "Lists pipelines.\n\nCaller must have READ permission to the project.",
          "parameters": {
            "projectId": {
              "description": "Required. The name of the project to search for pipelines. Caller\nmust have READ access to this project.",
              "location": "query",
              "type": "string"
            },
            "namePrefix": {
              "description": "Optional. Pipelines with names that match this prefix should be\nreturned.  If unspecified, all pipelines in the project, up to\n`pageSize`, will be returned.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "Optional. Number of pipelines to return at once. Defaults to 256, and max\nis 2048.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Optional. Token to use to indicate where to start getting results.\nIf unspecified, returns the first page of results.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListPipelinesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/genomics"
          ]
        },
        "delete": {
          "id": "genomics.pipelines.delete",
          "path": "v1alpha2/pipelines/{pipelineId}",
          "flatPath": "v1alpha2/pipelines/{pipelineId}",
          "httpMethod": "DELETE",
          "description": "Deletes a pipeline based on ID.\n\nCaller must have WRITE permission to the project.",
          "parameters": {
            "pipelineId": {
              "description": "Caller must have WRITE access to the project in which this pipeline\nis defined.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "pipelineId"
          ],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/genomics"
          ]
        }
      }
    }
  },
  "basePath": ""
}